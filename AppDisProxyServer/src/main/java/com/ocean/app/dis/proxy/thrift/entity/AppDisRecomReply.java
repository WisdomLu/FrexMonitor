/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.ocean.app.dis.proxy.thrift.entity;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-11-23")
public class AppDisRecomReply implements org.apache.thrift.TBase<AppDisRecomReply, AppDisRecomReply._Fields>, java.io.Serializable, Cloneable, Comparable<AppDisRecomReply> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AppDisRecomReply");

  private static final org.apache.thrift.protocol.TField ERROR_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("errorCode", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ERROR_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("errorMsg", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField APP_DIS_CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("appDisContent", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField THIRD_REPORT_LINKS_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdReportLinks", org.apache.thrift.protocol.TType.MAP, (short)4);
  private static final org.apache.thrift.protocol.TField EXTRA_DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("extra_data", org.apache.thrift.protocol.TType.STRUCT, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AppDisRecomReplyStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AppDisRecomReplyTupleSchemeFactory());
  }

  /**
   * 
   * @see ErrorCode
   */
  public ErrorCode errorCode; // required
  public String errorMsg; // optional
  public List<AppDisContent> appDisContent; // optional
  public Map<String,List<String>> thirdReportLinks; // optional
  public AppExtraData extra_data; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see ErrorCode
     */
    ERROR_CODE((short)1, "errorCode"),
    ERROR_MSG((short)2, "errorMsg"),
    APP_DIS_CONTENT((short)3, "appDisContent"),
    THIRD_REPORT_LINKS((short)4, "thirdReportLinks"),
    EXTRA_DATA((short)5, "extra_data");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ERROR_CODE
          return ERROR_CODE;
        case 2: // ERROR_MSG
          return ERROR_MSG;
        case 3: // APP_DIS_CONTENT
          return APP_DIS_CONTENT;
        case 4: // THIRD_REPORT_LINKS
          return THIRD_REPORT_LINKS;
        case 5: // EXTRA_DATA
          return EXTRA_DATA;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.ERROR_MSG,_Fields.APP_DIS_CONTENT,_Fields.THIRD_REPORT_LINKS,_Fields.EXTRA_DATA};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ERROR_CODE, new org.apache.thrift.meta_data.FieldMetaData("errorCode", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ErrorCode.class)));
    tmpMap.put(_Fields.ERROR_MSG, new org.apache.thrift.meta_data.FieldMetaData("errorMsg", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APP_DIS_CONTENT, new org.apache.thrift.meta_data.FieldMetaData("appDisContent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AppDisContent.class))));
    tmpMap.put(_Fields.THIRD_REPORT_LINKS, new org.apache.thrift.meta_data.FieldMetaData("thirdReportLinks", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)))));
    tmpMap.put(_Fields.EXTRA_DATA, new org.apache.thrift.meta_data.FieldMetaData("extra_data", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AppExtraData.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AppDisRecomReply.class, metaDataMap);
  }

  public AppDisRecomReply() {
  }

  public AppDisRecomReply(
    ErrorCode errorCode)
  {
    this();
    this.errorCode = errorCode;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AppDisRecomReply(AppDisRecomReply other) {
    if (other.isSetErrorCode()) {
      this.errorCode = other.errorCode;
    }
    if (other.isSetErrorMsg()) {
      this.errorMsg = other.errorMsg;
    }
    if (other.isSetAppDisContent()) {
      List<AppDisContent> __this__appDisContent = new ArrayList<AppDisContent>(other.appDisContent.size());
      for (AppDisContent other_element : other.appDisContent) {
        __this__appDisContent.add(new AppDisContent(other_element));
      }
      this.appDisContent = __this__appDisContent;
    }
    if (other.isSetThirdReportLinks()) {
      Map<String,List<String>> __this__thirdReportLinks = new HashMap<String,List<String>>(other.thirdReportLinks.size());
      for (Map.Entry<String, List<String>> other_element : other.thirdReportLinks.entrySet()) {

        String other_element_key = other_element.getKey();
        List<String> other_element_value = other_element.getValue();

        String __this__thirdReportLinks_copy_key = other_element_key;

        List<String> __this__thirdReportLinks_copy_value = new ArrayList<String>(other_element_value);

        __this__thirdReportLinks.put(__this__thirdReportLinks_copy_key, __this__thirdReportLinks_copy_value);
      }
      this.thirdReportLinks = __this__thirdReportLinks;
    }
    if (other.isSetExtra_data()) {
      this.extra_data = new AppExtraData(other.extra_data);
    }
  }

  public AppDisRecomReply deepCopy() {
    return new AppDisRecomReply(this);
  }

  
  public void clear() {
    this.errorCode = null;
    this.errorMsg = null;
    this.appDisContent = null;
    this.thirdReportLinks = null;
    this.extra_data = null;
  }

  /**
   * 
   * @see ErrorCode
   */
  public ErrorCode getErrorCode() {
    return this.errorCode;
  }

  /**
   * 
   * @see ErrorCode
   */
  public AppDisRecomReply setErrorCode(ErrorCode errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  public void unsetErrorCode() {
    this.errorCode = null;
  }

  /** Returns true if field errorCode is set (has been assigned a value) and false otherwise */
  public boolean isSetErrorCode() {
    return this.errorCode != null;
  }

  public void setErrorCodeIsSet(boolean value) {
    if (!value) {
      this.errorCode = null;
    }
  }

  public String getErrorMsg() {
    return this.errorMsg;
  }

  public AppDisRecomReply setErrorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
    return this;
  }

  public void unsetErrorMsg() {
    this.errorMsg = null;
  }

  /** Returns true if field errorMsg is set (has been assigned a value) and false otherwise */
  public boolean isSetErrorMsg() {
    return this.errorMsg != null;
  }

  public void setErrorMsgIsSet(boolean value) {
    if (!value) {
      this.errorMsg = null;
    }
  }

  public int getAppDisContentSize() {
    return (this.appDisContent == null) ? 0 : this.appDisContent.size();
  }

  public java.util.Iterator<AppDisContent> getAppDisContentIterator() {
    return (this.appDisContent == null) ? null : this.appDisContent.iterator();
  }

  public void addToAppDisContent(AppDisContent elem) {
    if (this.appDisContent == null) {
      this.appDisContent = new ArrayList<AppDisContent>();
    }
    this.appDisContent.add(elem);
  }

  public List<AppDisContent> getAppDisContent() {
    return this.appDisContent;
  }

  public AppDisRecomReply setAppDisContent(List<AppDisContent> appDisContent) {
    this.appDisContent = appDisContent;
    return this;
  }

  public void unsetAppDisContent() {
    this.appDisContent = null;
  }

  /** Returns true if field appDisContent is set (has been assigned a value) and false otherwise */
  public boolean isSetAppDisContent() {
    return this.appDisContent != null;
  }

  public void setAppDisContentIsSet(boolean value) {
    if (!value) {
      this.appDisContent = null;
    }
  }

  public int getThirdReportLinksSize() {
    return (this.thirdReportLinks == null) ? 0 : this.thirdReportLinks.size();
  }

  public void putToThirdReportLinks(String key, List<String> val) {
    if (this.thirdReportLinks == null) {
      this.thirdReportLinks = new HashMap<String,List<String>>();
    }
    this.thirdReportLinks.put(key, val);
  }

  public Map<String,List<String>> getThirdReportLinks() {
    return this.thirdReportLinks;
  }

  public AppDisRecomReply setThirdReportLinks(Map<String,List<String>> thirdReportLinks) {
    this.thirdReportLinks = thirdReportLinks;
    return this;
  }

  public void unsetThirdReportLinks() {
    this.thirdReportLinks = null;
  }

  /** Returns true if field thirdReportLinks is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdReportLinks() {
    return this.thirdReportLinks != null;
  }

  public void setThirdReportLinksIsSet(boolean value) {
    if (!value) {
      this.thirdReportLinks = null;
    }
  }

  public AppExtraData getExtra_data() {
    return this.extra_data;
  }

  public AppDisRecomReply setExtra_data(AppExtraData extra_data) {
    this.extra_data = extra_data;
    return this;
  }

  public void unsetExtra_data() {
    this.extra_data = null;
  }

  /** Returns true if field extra_data is set (has been assigned a value) and false otherwise */
  public boolean isSetExtra_data() {
    return this.extra_data != null;
  }

  public void setExtra_dataIsSet(boolean value) {
    if (!value) {
      this.extra_data = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ERROR_CODE:
      if (value == null) {
        unsetErrorCode();
      } else {
        setErrorCode((ErrorCode)value);
      }
      break;

    case ERROR_MSG:
      if (value == null) {
        unsetErrorMsg();
      } else {
        setErrorMsg((String)value);
      }
      break;

    case APP_DIS_CONTENT:
      if (value == null) {
        unsetAppDisContent();
      } else {
        setAppDisContent((List<AppDisContent>)value);
      }
      break;

    case THIRD_REPORT_LINKS:
      if (value == null) {
        unsetThirdReportLinks();
      } else {
        setThirdReportLinks((Map<String,List<String>>)value);
      }
      break;

    case EXTRA_DATA:
      if (value == null) {
        unsetExtra_data();
      } else {
        setExtra_data((AppExtraData)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ERROR_CODE:
      return getErrorCode();

    case ERROR_MSG:
      return getErrorMsg();

    case APP_DIS_CONTENT:
      return getAppDisContent();

    case THIRD_REPORT_LINKS:
      return getThirdReportLinks();

    case EXTRA_DATA:
      return getExtra_data();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ERROR_CODE:
      return isSetErrorCode();
    case ERROR_MSG:
      return isSetErrorMsg();
    case APP_DIS_CONTENT:
      return isSetAppDisContent();
    case THIRD_REPORT_LINKS:
      return isSetThirdReportLinks();
    case EXTRA_DATA:
      return isSetExtra_data();
    }
    throw new IllegalStateException();
  }

  
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AppDisRecomReply)
      return this.equals((AppDisRecomReply)that);
    return false;
  }

  public boolean equals(AppDisRecomReply that) {
    if (that == null)
      return false;

    boolean this_present_errorCode = true && this.isSetErrorCode();
    boolean that_present_errorCode = true && that.isSetErrorCode();
    if (this_present_errorCode || that_present_errorCode) {
      if (!(this_present_errorCode && that_present_errorCode))
        return false;
      if (!this.errorCode.equals(that.errorCode))
        return false;
    }

    boolean this_present_errorMsg = true && this.isSetErrorMsg();
    boolean that_present_errorMsg = true && that.isSetErrorMsg();
    if (this_present_errorMsg || that_present_errorMsg) {
      if (!(this_present_errorMsg && that_present_errorMsg))
        return false;
      if (!this.errorMsg.equals(that.errorMsg))
        return false;
    }

    boolean this_present_appDisContent = true && this.isSetAppDisContent();
    boolean that_present_appDisContent = true && that.isSetAppDisContent();
    if (this_present_appDisContent || that_present_appDisContent) {
      if (!(this_present_appDisContent && that_present_appDisContent))
        return false;
      if (!this.appDisContent.equals(that.appDisContent))
        return false;
    }

    boolean this_present_thirdReportLinks = true && this.isSetThirdReportLinks();
    boolean that_present_thirdReportLinks = true && that.isSetThirdReportLinks();
    if (this_present_thirdReportLinks || that_present_thirdReportLinks) {
      if (!(this_present_thirdReportLinks && that_present_thirdReportLinks))
        return false;
      if (!this.thirdReportLinks.equals(that.thirdReportLinks))
        return false;
    }

    boolean this_present_extra_data = true && this.isSetExtra_data();
    boolean that_present_extra_data = true && that.isSetExtra_data();
    if (this_present_extra_data || that_present_extra_data) {
      if (!(this_present_extra_data && that_present_extra_data))
        return false;
      if (!this.extra_data.equals(that.extra_data))
        return false;
    }

    return true;
  }

  
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_errorCode = true && (isSetErrorCode());
    list.add(present_errorCode);
    if (present_errorCode)
      list.add(errorCode.getValue());

    boolean present_errorMsg = true && (isSetErrorMsg());
    list.add(present_errorMsg);
    if (present_errorMsg)
      list.add(errorMsg);

    boolean present_appDisContent = true && (isSetAppDisContent());
    list.add(present_appDisContent);
    if (present_appDisContent)
      list.add(appDisContent);

    boolean present_thirdReportLinks = true && (isSetThirdReportLinks());
    list.add(present_thirdReportLinks);
    if (present_thirdReportLinks)
      list.add(thirdReportLinks);

    boolean present_extra_data = true && (isSetExtra_data());
    list.add(present_extra_data);
    if (present_extra_data)
      list.add(extra_data);

    return list.hashCode();
  }

  
  public int compareTo(AppDisRecomReply other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetErrorCode()).compareTo(other.isSetErrorCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErrorCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errorCode, other.errorCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetErrorMsg()).compareTo(other.isSetErrorMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErrorMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errorMsg, other.errorMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAppDisContent()).compareTo(other.isSetAppDisContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppDisContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appDisContent, other.appDisContent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdReportLinks()).compareTo(other.isSetThirdReportLinks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdReportLinks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdReportLinks, other.thirdReportLinks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtra_data()).compareTo(other.isSetExtra_data());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtra_data()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extra_data, other.extra_data);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  
  public String toString() {
    StringBuilder sb = new StringBuilder("AppDisRecomReply(");
    boolean first = true;

    sb.append("errorCode:");
    if (this.errorCode == null) {
      sb.append("null");
    } else {
      sb.append(this.errorCode);
    }
    first = false;
    if (isSetErrorMsg()) {
      if (!first) sb.append(", ");
      sb.append("errorMsg:");
      if (this.errorMsg == null) {
        sb.append("null");
      } else {
        sb.append(this.errorMsg);
      }
      first = false;
    }
    if (isSetAppDisContent()) {
      if (!first) sb.append(", ");
      sb.append("appDisContent:");
      if (this.appDisContent == null) {
        sb.append("null");
      } else {
        sb.append(this.appDisContent);
      }
      first = false;
    }
    if (isSetThirdReportLinks()) {
      if (!first) sb.append(", ");
      sb.append("thirdReportLinks:");
      if (this.thirdReportLinks == null) {
        sb.append("null");
      } else {
        sb.append(this.thirdReportLinks);
      }
      first = false;
    }
    if (isSetExtra_data()) {
      if (!first) sb.append(", ");
      sb.append("extra_data:");
      if (this.extra_data == null) {
        sb.append("null");
      } else {
        sb.append(this.extra_data);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (errorCode == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'errorCode' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (extra_data != null) {
      extra_data.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AppDisRecomReplyStandardSchemeFactory implements SchemeFactory {
    public AppDisRecomReplyStandardScheme getScheme() {
      return new AppDisRecomReplyStandardScheme();
    }
  }

  private static class AppDisRecomReplyStandardScheme extends StandardScheme<AppDisRecomReply> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AppDisRecomReply struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ERROR_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.errorCode = com.ocean.app.dis.proxy.thrift.entity.ErrorCode.findByValue(iprot.readI32());
              struct.setErrorCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ERROR_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.errorMsg = iprot.readString();
              struct.setErrorMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // APP_DIS_CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list84 = iprot.readListBegin();
                struct.appDisContent = new ArrayList<AppDisContent>(_list84.size);
                AppDisContent _elem85;
                for (int _i86 = 0; _i86 < _list84.size; ++_i86)
                {
                  _elem85 = new AppDisContent();
                  _elem85.read(iprot);
                  struct.appDisContent.add(_elem85);
                }
                iprot.readListEnd();
              }
              struct.setAppDisContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // THIRD_REPORT_LINKS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map87 = iprot.readMapBegin();
                struct.thirdReportLinks = new HashMap<String,List<String>>(2*_map87.size);
                String _key88;
                List<String> _val89;
                for (int _i90 = 0; _i90 < _map87.size; ++_i90)
                {
                  _key88 = iprot.readString();
                  {
                    org.apache.thrift.protocol.TList _list91 = iprot.readListBegin();
                    _val89 = new ArrayList<String>(_list91.size);
                    String _elem92;
                    for (int _i93 = 0; _i93 < _list91.size; ++_i93)
                    {
                      _elem92 = iprot.readString();
                      _val89.add(_elem92);
                    }
                    iprot.readListEnd();
                  }
                  struct.thirdReportLinks.put(_key88, _val89);
                }
                iprot.readMapEnd();
              }
              struct.setThirdReportLinksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EXTRA_DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.extra_data = new AppExtraData();
              struct.extra_data.read(iprot);
              struct.setExtra_dataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AppDisRecomReply struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.errorCode != null) {
        oprot.writeFieldBegin(ERROR_CODE_FIELD_DESC);
        oprot.writeI32(struct.errorCode.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.errorMsg != null) {
        if (struct.isSetErrorMsg()) {
          oprot.writeFieldBegin(ERROR_MSG_FIELD_DESC);
          oprot.writeString(struct.errorMsg);
          oprot.writeFieldEnd();
        }
      }
      if (struct.appDisContent != null) {
        if (struct.isSetAppDisContent()) {
          oprot.writeFieldBegin(APP_DIS_CONTENT_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.appDisContent.size()));
            for (AppDisContent _iter94 : struct.appDisContent)
            {
              _iter94.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.thirdReportLinks != null) {
        if (struct.isSetThirdReportLinks()) {
          oprot.writeFieldBegin(THIRD_REPORT_LINKS_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, struct.thirdReportLinks.size()));
            for (Map.Entry<String, List<String>> _iter95 : struct.thirdReportLinks.entrySet())
            {
              oprot.writeString(_iter95.getKey());
              {
                oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, _iter95.getValue().size()));
                for (String _iter96 : _iter95.getValue())
                {
                  oprot.writeString(_iter96);
                }
                oprot.writeListEnd();
              }
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.extra_data != null) {
        if (struct.isSetExtra_data()) {
          oprot.writeFieldBegin(EXTRA_DATA_FIELD_DESC);
          struct.extra_data.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AppDisRecomReplyTupleSchemeFactory implements SchemeFactory {
    public AppDisRecomReplyTupleScheme getScheme() {
      return new AppDisRecomReplyTupleScheme();
    }
  }

  private static class AppDisRecomReplyTupleScheme extends TupleScheme<AppDisRecomReply> {

    
    public void write(org.apache.thrift.protocol.TProtocol prot, AppDisRecomReply struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.errorCode.getValue());
      BitSet optionals = new BitSet();
      if (struct.isSetErrorMsg()) {
        optionals.set(0);
      }
      if (struct.isSetAppDisContent()) {
        optionals.set(1);
      }
      if (struct.isSetThirdReportLinks()) {
        optionals.set(2);
      }
      if (struct.isSetExtra_data()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetErrorMsg()) {
        oprot.writeString(struct.errorMsg);
      }
      if (struct.isSetAppDisContent()) {
        {
          oprot.writeI32(struct.appDisContent.size());
          for (AppDisContent _iter97 : struct.appDisContent)
          {
            _iter97.write(oprot);
          }
        }
      }
      if (struct.isSetThirdReportLinks()) {
        {
          oprot.writeI32(struct.thirdReportLinks.size());
          for (Map.Entry<String, List<String>> _iter98 : struct.thirdReportLinks.entrySet())
          {
            oprot.writeString(_iter98.getKey());
            {
              oprot.writeI32(_iter98.getValue().size());
              for (String _iter99 : _iter98.getValue())
              {
                oprot.writeString(_iter99);
              }
            }
          }
        }
      }
      if (struct.isSetExtra_data()) {
        struct.extra_data.write(oprot);
      }
    }

    
    public void read(org.apache.thrift.protocol.TProtocol prot, AppDisRecomReply struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.errorCode = com.ocean.app.dis.proxy.thrift.entity.ErrorCode.findByValue(iprot.readI32());
      struct.setErrorCodeIsSet(true);
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.errorMsg = iprot.readString();
        struct.setErrorMsgIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list100 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.appDisContent = new ArrayList<AppDisContent>(_list100.size);
          AppDisContent _elem101;
          for (int _i102 = 0; _i102 < _list100.size; ++_i102)
          {
            _elem101 = new AppDisContent();
            _elem101.read(iprot);
            struct.appDisContent.add(_elem101);
          }
        }
        struct.setAppDisContentIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TMap _map103 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.LIST, iprot.readI32());
          struct.thirdReportLinks = new HashMap<String,List<String>>(2*_map103.size);
          String _key104;
          List<String> _val105;
          for (int _i106 = 0; _i106 < _map103.size; ++_i106)
          {
            _key104 = iprot.readString();
            {
              org.apache.thrift.protocol.TList _list107 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
              _val105 = new ArrayList<String>(_list107.size);
              String _elem108;
              for (int _i109 = 0; _i109 < _list107.size; ++_i109)
              {
                _elem108 = iprot.readString();
                _val105.add(_elem108);
              }
            }
            struct.thirdReportLinks.put(_key104, _val105);
          }
        }
        struct.setThirdReportLinksIsSet(true);
      }
      if (incoming.get(3)) {
        struct.extra_data = new AppExtraData();
        struct.extra_data.read(iprot);
        struct.setExtra_dataIsSet(true);
      }
    }
  }

}

